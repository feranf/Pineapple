(*The grammar is trying to adapt to ISO-14977 EBNF (https://www.cl.cam.ac.uk/~mgk25/iso-14977.pdf)*)
IfStmt
    = 'if' Test Block ('elif' Test Block)* ['else' Block]
    ;

Test
    = MonoExpr (LogicOp BoolFuncCall)+
    | MonoExpr (LogicOp MonoExpr)+ BoolFuncCall
    | MonoExpr BoolFuncCall (LogicOp MonoExpr BoolFuncCall)*
    ;

LogicOp
    = 'and'
    | 'or'
    ;

BoolFuncCall
    = 'is' BoolFunc
    | 'not' BoolFunc
    ; 

BoolFunc 
    = CompOp MonoExpr
    | PartialFuncCalll
    ;

CompOp
    = '=='
    | '<'
    | '>'
    | '<='
    | '>='
    ;

PartialFuncCalll
    = IDENTIFIER MonoExpr IDENTIFIER MonoExpr
    | IDENTIFIER MonoExpr 
    | IDENTIFIER 
    ;

MonoExpr
    = '(' Expr ')'
    | IDENTIFIER
    | Value
    ;

Value
    = NUMBER
    | STRING
    | List
    | Object        
    | 'true'
    | 'false'
    | 'nil'
    ;

List
    = '[' ']'
    | '[' Value+ ']'
    ;

Object  
    = '{' '}'
    | NEWLINE INDENT Members+ DEDENT
    ;

Members
    = MEMBERNAME LinkOp Expr
    ;

LinkOp
    = '='
    | '<-'
    ;

Block 
    = NEWLINE INDENT Stmt+ DEDENT
    ;
